# To count the no.of times the values repeated in an array:

array=[int(x) for x in input().split()]
freq={}
for item in array:
    if (item in freq):
        freq[item] += 1
    else:
        freq[item] = 1
for key, value in freq.items():
    print("% d : % d" % (key, value))


# To find the k,th smallest element of the array given that all the elemnts in the array are distinct

array=[int(x) for x in input().split()]
array.sort()
k=int(input())
print(array[k-1])


# We can split s into n/k substrings where each subtring, ti, consists of a contiguous block of  characters in . Then, use each  to create string  such that:
The characters in ui are a subsequence of the characters in ti .
Any repeat occurrence of a character is removed from the string such that each character in ui occurs exactly once. In other words, if the character at some index
j in ti occurs at a previous index < in ti , then do not include the character in string .
Given  and , print  lines where each line  denotes string ui.

s = input()
k = int(input())
x = int(len(s) / k)
t = []
for i in range(x):
    start = i * k
    end = (i + 1) * k
    segment = ''.join(sorted(set(s[start:end]), key=s[start:end].index))
    t.append(segment)
for segment in t:
    print(segment)


# In a city,there are few houses.Each house has a number along with the distance from the starting point of the city. We need to find the maximum place in between two houses so that we can build the biggest house in the city.

n = int(input())
da = []
for i in range(0, n):
    nh, d = map(int, input().split())
    da.append((nh, d))
da.sort(key=lambda x: x[1])
print(da[-1][0], da[-2][0])

# To check whether an array is palinArray or not i.e., each entered element in the array is palindrome

n=int(input())
a=[]
for i in range(n):
    a.append(int(input()))
if all(str(num)==str(num)[::-1] for num in a):
    print("yes")
else:
    print("no")

# GCD of two numbers

n = int(input())
m = int(input())
f1 = [1]
f2 = [1]
for i in range(2, n + 1):
    if n % i == 0:
        f1.append(i)
for i in range(2, m + 1):
    if m % i == 0:
        f2.append(i)
f1.sort()
f2.sort()
gcd = max(set(f1) & set(f2))
print( gcd)


# Raghu  is a shoe shop owner. His shop has x number of shoes.He has a list containing the size of each shoe he has in his shop.
There are  n number of customers who are willing to pay  amount of money only if they get the shoe of their desired size.
Your task is to compute how much money  earned.

x = int(input())
l = list(map(int, input().split()))
n = int(input())
tprice = 0
for i in range(n):
    size, price = map(int, input().split())
    if size in l and l.count(size) > 0:
        tprice += price
        l.remove(size) 
print(tprice)

# Dr. John Wesley has a spreadsheet containing a list of student's ID,MARKS,NAME and CLASS .
Your task is to help Dr. Wesley calculate the average marks of the students.

from collections import namedtuple
n=int(input())
fields=input().split()
total_marks=0
for student in range(n):
    students = namedtuple('student',fields)
    ID, MARKS, NAME, CLASS =input().split()
    student=students(ID,MARKS,NAME,CLASS)
    total_marks+=int(student.MARKS)
print(total_marks/n)    





     
    
